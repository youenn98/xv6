Q:Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
A:The a0~a7 registers contain argumentsto functions. In main's call a2 register store the 13.

Q:Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
A:li	a1,12 is call to function f(inline computed). call to g is inline in function f addiw a0,a0,3.

Q:At what address is the function printf located?
A:It's in 630.

Q:What value is in the register ra just after the jalr to printf in main?
A:It will store the address of next instruction when function call returns, which is 0x38.

Q:Run the following code. What is the output?
unsigned int i = 0x00646c72;
printf("H%x Wo%s", 57616, &i);
The output depends on that fact that the RISC-V is little-endian.
If the RISC-V were instead big-endian what would you set i to in order to yield the same output? 
Would you need to change 57616 to a different value?

A:The out put will be: He110 World. If the machine is big-endian i should = 0x726c6400.
I don't need to change 57616 to a different value, because it's only a conversion of number systems.

Q:In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?
printf("x=%d y=%d", 3);

A:After y, there will get a random number, the value depends on what value is in register a2.